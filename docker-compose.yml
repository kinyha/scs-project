version: '3.8'

services:
  # PostgreSQL для delivery service
  postgres-delivery:
    image: postgres:14
    container_name: scs-postgres-delivery
    environment:
      POSTGRES_DB: scs_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - postgres-delivery-data:/var/lib/postgresql/data
    networks:
      - scs-network

  # PostgreSQL для notification service
  postgres-notification:
    image: postgres:14
    container_name: scs-postgres-notification
    environment:
      POSTGRES_DB: scs_notification_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"  # другой порт, чтобы не конфликтовал с первым Postgres
    volumes:
      - postgres-notification-data:/var/lib/postgresql/data
    networks:
      - scs-network

  # Zookeeper для Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: scs-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - scs-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: scs-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - scs-network

networks:
  scs-network:
    driver: bridge

volumes:
  postgres-delivery-data:
  postgres-notification-data: